// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "ProjetAnnuel.h"
#include "ProjetAnnuel.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeProjetAnnuel() {}
	void ACPP_CaseColorLevel::StaticRegisterNativesACPP_CaseColorLevel()
	{
		FNativeFunctionRegistrar::RegisterFunction(ACPP_CaseColorLevel::StaticClass(),"OnHit",(Native)&ACPP_CaseColorLevel::execOnHit);
	}
	IMPLEMENT_CLASS(ACPP_CaseColorLevel, 3453398043);
static class UEnum* EType_StaticEnum()
{
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern PROJETANNUEL_API class UEnum* Z_Construct_UEnum_ProjetAnnuel_EType();
		extern PROJETANNUEL_API class UPackage* Z_Construct_UPackage_ProjetAnnuel();
		Singleton = GetStaticEnum(Z_Construct_UEnum_ProjetAnnuel_EType, Z_Construct_UPackage_ProjetAnnuel(), TEXT("EType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EType(EType_StaticEnum, TEXT("/Script/ProjetAnnuel"));
	void ACPP_PawnColorLevel::StaticRegisterNativesACPP_PawnColorLevel()
	{
		FNativeFunctionRegistrar::RegisterFunction(ACPP_PawnColorLevel::StaticClass(),"GetColor",(Native)&ACPP_PawnColorLevel::execGetColor);
	}
	IMPLEMENT_CLASS(ACPP_PawnColorLevel, 3044248330);
	void ACPP_ColorLevelScriptActor::StaticRegisterNativesACPP_ColorLevelScriptActor()
	{
	}
	IMPLEMENT_CLASS(ACPP_ColorLevelScriptActor, 379156621);
	void ACPP_PlayerControllerColorLevel::StaticRegisterNativesACPP_PlayerControllerColorLevel()
	{
	}
	IMPLEMENT_CLASS(ACPP_PlayerControllerColorLevel, 2867479860);
	void ULocalMPViewportClient::StaticRegisterNativesULocalMPViewportClient()
	{
	}
	IMPLEMENT_CLASS(ULocalMPViewportClient, 2322192679);
	void AProjetAnnuelGameMode::StaticRegisterNativesAProjetAnnuelGameMode()
	{
	}
	IMPLEMENT_CLASS(AProjetAnnuelGameMode, 2189127475);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FHitResult();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	ENGINE_API class UClass* Z_Construct_UClass_UPrimitiveComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMesh_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APawn();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ALevelScriptActor();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerController();
	ENGINE_API class UClass* Z_Construct_UClass_UGameViewportClient();
	ENGINE_API class UClass* Z_Construct_UClass_AGameMode();

	PROJETANNUEL_API class UFunction* Z_Construct_UFunction_ACPP_CaseColorLevel_OnHit();
	PROJETANNUEL_API class UClass* Z_Construct_UClass_ACPP_CaseColorLevel_NoRegister();
	PROJETANNUEL_API class UClass* Z_Construct_UClass_ACPP_CaseColorLevel();
	PROJETANNUEL_API class UEnum* Z_Construct_UEnum_ProjetAnnuel_EType();
	PROJETANNUEL_API class UFunction* Z_Construct_UFunction_ACPP_PawnColorLevel_GetColor();
	PROJETANNUEL_API class UClass* Z_Construct_UClass_ACPP_PawnColorLevel_NoRegister();
	PROJETANNUEL_API class UClass* Z_Construct_UClass_ACPP_PawnColorLevel();
	PROJETANNUEL_API class UClass* Z_Construct_UClass_ACPP_ColorLevelScriptActor_NoRegister();
	PROJETANNUEL_API class UClass* Z_Construct_UClass_ACPP_ColorLevelScriptActor();
	PROJETANNUEL_API class UClass* Z_Construct_UClass_ACPP_PlayerControllerColorLevel_NoRegister();
	PROJETANNUEL_API class UClass* Z_Construct_UClass_ACPP_PlayerControllerColorLevel();
	PROJETANNUEL_API class UClass* Z_Construct_UClass_ULocalMPViewportClient_NoRegister();
	PROJETANNUEL_API class UClass* Z_Construct_UClass_ULocalMPViewportClient();
	PROJETANNUEL_API class UClass* Z_Construct_UClass_AProjetAnnuelGameMode_NoRegister();
	PROJETANNUEL_API class UClass* Z_Construct_UClass_AProjetAnnuelGameMode();
	PROJETANNUEL_API class UPackage* Z_Construct_UPackage_ProjetAnnuel();
	UFunction* Z_Construct_UFunction_ACPP_CaseColorLevel_OnHit()
	{
		struct CPP_CaseColorLevel_eventOnHit_Parms
		{
			AActor* OtherActor;
			UPrimitiveComponent* OtherComp;
			FVector NormalImpulse;
			FHitResult Hit;
		};
		UObject* Outer=Z_Construct_UClass_ACPP_CaseColorLevel();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnHit"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x00C20401, 65535, sizeof(CPP_CaseColorLevel_eventOnHit_Parms));
			UProperty* NewProp_Hit = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Hit"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Hit, CPP_CaseColorLevel_eventOnHit_Parms), 0x0000008008000182, Z_Construct_UScriptStruct_FHitResult());
			UProperty* NewProp_NormalImpulse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NormalImpulse"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(NormalImpulse, CPP_CaseColorLevel_eventOnHit_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_OtherComp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherComp"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OtherComp, CPP_CaseColorLevel_eventOnHit_Parms), 0x0000000000080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			UProperty* NewProp_OtherActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OtherActor, CPP_CaseColorLevel_eventOnHit_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("CPP_CaseColorLevel.h"));
			MetaData->SetValue(NewProp_OtherComp, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ACPP_CaseColorLevel_NoRegister()
	{
		return ACPP_CaseColorLevel::StaticClass();
	}
	UClass* Z_Construct_UClass_ACPP_CaseColorLevel()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_ProjetAnnuel();
			OuterClass = ACPP_CaseColorLevel::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_ACPP_CaseColorLevel_OnHit());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ExternCircleMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ExternCircleMesh"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ExternCircleMesh, ACPP_CaseColorLevel), 0x0000080000000005, Z_Construct_UClass_UStaticMesh_NoRegister());
				UProperty* NewProp_ExternCircleStaticMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ExternCircleStaticMesh"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ExternCircleStaticMesh, ACPP_CaseColorLevel), 0x0000080000080009, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
				UProperty* NewProp_InternCircleMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InternCircleMesh"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(InternCircleMesh, ACPP_CaseColorLevel), 0x0000080000000005, Z_Construct_UClass_UStaticMesh_NoRegister());
				UProperty* NewProp_InternCircleStaticMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InternCircleStaticMesh"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(InternCircleStaticMesh, ACPP_CaseColorLevel), 0x0000080000080009, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
				UProperty* NewProp_BaseMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseMesh"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BaseMesh, ACPP_CaseColorLevel), 0x0000080000000005, Z_Construct_UClass_UStaticMesh_NoRegister());
				UProperty* NewProp_BaseStaticMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseStaticMesh"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(BaseStaticMesh, ACPP_CaseColorLevel), 0x0000080000080009, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ACPP_CaseColorLevel_OnHit()); // 285839888
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("CPP_CaseColorLevel.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("CPP_CaseColorLevel.h"));
				MetaData->SetValue(NewProp_ExternCircleMesh, TEXT("Category"), TEXT("Default Mesh"));
				MetaData->SetValue(NewProp_ExternCircleMesh, TEXT("ModuleRelativePath"), TEXT("CPP_CaseColorLevel.h"));
				MetaData->SetValue(NewProp_ExternCircleStaticMesh, TEXT("Category"), TEXT("CPP_CaseColorLevel"));
				MetaData->SetValue(NewProp_ExternCircleStaticMesh, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_ExternCircleStaticMesh, TEXT("ModuleRelativePath"), TEXT("CPP_CaseColorLevel.h"));
				MetaData->SetValue(NewProp_InternCircleMesh, TEXT("Category"), TEXT("Default Mesh"));
				MetaData->SetValue(NewProp_InternCircleMesh, TEXT("ModuleRelativePath"), TEXT("CPP_CaseColorLevel.h"));
				MetaData->SetValue(NewProp_InternCircleStaticMesh, TEXT("Category"), TEXT("CPP_CaseColorLevel"));
				MetaData->SetValue(NewProp_InternCircleStaticMesh, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_InternCircleStaticMesh, TEXT("ModuleRelativePath"), TEXT("CPP_CaseColorLevel.h"));
				MetaData->SetValue(NewProp_BaseMesh, TEXT("Category"), TEXT("Default Mesh"));
				MetaData->SetValue(NewProp_BaseMesh, TEXT("ModuleRelativePath"), TEXT("CPP_CaseColorLevel.h"));
				MetaData->SetValue(NewProp_BaseStaticMesh, TEXT("Category"), TEXT("CPP_CaseColorLevel"));
				MetaData->SetValue(NewProp_BaseStaticMesh, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_BaseStaticMesh, TEXT("ModuleRelativePath"), TEXT("CPP_CaseColorLevel.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ACPP_CaseColorLevel(Z_Construct_UClass_ACPP_CaseColorLevel, TEXT("ACPP_CaseColorLevel"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ACPP_CaseColorLevel);
	UEnum* Z_Construct_UEnum_ProjetAnnuel_EType()
	{
		UPackage* Outer=Z_Construct_UPackage_ProjetAnnuel();
		static UEnum* ReturnEnum = NULL;
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EType"), RF_Public|RF_Transient|RF_Native) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EType::VE_Depart")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EType::VE_Fin")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EType::VE_Blue")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EType::VE_Green")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EType::VE_Red")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EType::VE_Yellow")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EType::VE_MAX")), 6));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("CPP_PawnColorLevel.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("\"BlueprintType\" is essential to include"));
			MetaData->SetValue(ReturnEnum, TEXT("VE_Blue.DisplayName"), TEXT("BLUE"));
			MetaData->SetValue(ReturnEnum, TEXT("VE_Depart.DisplayName"), TEXT("DEPART"));
			MetaData->SetValue(ReturnEnum, TEXT("VE_Fin.DisplayName"), TEXT("FIN"));
			MetaData->SetValue(ReturnEnum, TEXT("VE_Green.DisplayName"), TEXT("GREEN"));
			MetaData->SetValue(ReturnEnum, TEXT("VE_Red.DisplayName"), TEXT("RED"));
			MetaData->SetValue(ReturnEnum, TEXT("VE_Yellow.DisplayName"), TEXT("YELLOW"));
#endif
		}
		return ReturnEnum;
	}
	UFunction* Z_Construct_UFunction_ACPP_PawnColorLevel_GetColor()
	{
		struct CPP_PawnColorLevel_eventGetColor_Parms
		{
			TEnumAsByte<EType> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ACPP_PawnColorLevel();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetColor"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(CPP_PawnColorLevel_eventGetColor_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, CPP_PawnColorLevel_eventGetColor_Parms), 0x0000000000000580, Z_Construct_UEnum_ProjetAnnuel_EType());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Color"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("CPP_PawnColorLevel.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called to bind functionality to input\nvirtual void SetupPlayerInputComponent(class UInputComponent* InputComponent) override;"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ACPP_PawnColorLevel_NoRegister()
	{
		return ACPP_PawnColorLevel::StaticClass();
	}
	UClass* Z_Construct_UClass_ACPP_PawnColorLevel()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APawn();
			Z_Construct_UPackage_ProjetAnnuel();
			OuterClass = ACPP_PawnColorLevel::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_ACPP_PawnColorLevel_GetColor());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OurCamera = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OurCamera"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OurCamera, ACPP_PawnColorLevel), 0x0000080000080009, Z_Construct_UClass_UCameraComponent_NoRegister());
				UProperty* NewProp_type = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("type"), RF_Public|RF_Transient|RF_Native) UByteProperty(CPP_PROPERTY_BASE(type, ACPP_PawnColorLevel), 0x0000080000000001, Z_Construct_UEnum_ProjetAnnuel_EType());
				UProperty* NewProp_TileMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TileMesh"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(TileMesh, ACPP_PawnColorLevel), 0x0000080000000005, Z_Construct_UClass_UStaticMesh_NoRegister());
				UProperty* NewProp_ObjectMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ObjectMesh"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ObjectMesh, ACPP_PawnColorLevel), 0x0000080000080009, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ACPP_PawnColorLevel_GetColor()); // 2690631352
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("CPP_PawnColorLevel.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("CPP_PawnColorLevel.h"));
				MetaData->SetValue(NewProp_OurCamera, TEXT("Category"), TEXT("CPP_PawnColorLevel"));
				MetaData->SetValue(NewProp_OurCamera, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_OurCamera, TEXT("ModuleRelativePath"), TEXT("CPP_PawnColorLevel.h"));
				MetaData->SetValue(NewProp_OurCamera, TEXT("ToolTip"), TEXT("USpringArmComponent* OurCameraSpringArm;"));
				MetaData->SetValue(NewProp_type, TEXT("Category"), TEXT("CPP_PawnColorLevel"));
				MetaData->SetValue(NewProp_type, TEXT("ModuleRelativePath"), TEXT("CPP_PawnColorLevel.h"));
				MetaData->SetValue(NewProp_TileMesh, TEXT("Category"), TEXT("Default Mesh"));
				MetaData->SetValue(NewProp_TileMesh, TEXT("ModuleRelativePath"), TEXT("CPP_PawnColorLevel.h"));
				MetaData->SetValue(NewProp_ObjectMesh, TEXT("Category"), TEXT("CPP_PawnColorLevel"));
				MetaData->SetValue(NewProp_ObjectMesh, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_ObjectMesh, TEXT("ModuleRelativePath"), TEXT("CPP_PawnColorLevel.h"));
				MetaData->SetValue(NewProp_ObjectMesh, TEXT("ToolTip"), TEXT("UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Mesh\")"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ACPP_PawnColorLevel(Z_Construct_UClass_ACPP_PawnColorLevel, TEXT("ACPP_PawnColorLevel"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ACPP_PawnColorLevel);
	UClass* Z_Construct_UClass_ACPP_ColorLevelScriptActor_NoRegister()
	{
		return ACPP_ColorLevelScriptActor::StaticClass();
	}
	UClass* Z_Construct_UClass_ACPP_ColorLevelScriptActor()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ALevelScriptActor();
			Z_Construct_UPackage_ProjetAnnuel();
			OuterClass = ACPP_ColorLevelScriptActor::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900280;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("CPP_ColorLevelScriptActor.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("CPP_ColorLevelScriptActor.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ACPP_ColorLevelScriptActor(Z_Construct_UClass_ACPP_ColorLevelScriptActor, TEXT("ACPP_ColorLevelScriptActor"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ACPP_ColorLevelScriptActor);
	UClass* Z_Construct_UClass_ACPP_PlayerControllerColorLevel_NoRegister()
	{
		return ACPP_PlayerControllerColorLevel::StaticClass();
	}
	UClass* Z_Construct_UClass_ACPP_PlayerControllerColorLevel()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APlayerController();
			Z_Construct_UPackage_ProjetAnnuel();
			OuterClass = ACPP_PlayerControllerColorLevel::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900284;


				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("CPP_PlayerControllerColorLevel.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("CPP_PlayerControllerColorLevel.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ACPP_PlayerControllerColorLevel(Z_Construct_UClass_ACPP_PlayerControllerColorLevel, TEXT("ACPP_PlayerControllerColorLevel"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ACPP_PlayerControllerColorLevel);
	UClass* Z_Construct_UClass_ULocalMPViewportClient_NoRegister()
	{
		return ULocalMPViewportClient::StaticClass();
	}
	UClass* Z_Construct_UClass_ULocalMPViewportClient()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGameViewportClient();
			Z_Construct_UPackage_ProjetAnnuel();
			OuterClass = ULocalMPViewportClient::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100088;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("LocalMPViewportClient.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("LocalMPViewportClient.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ULocalMPViewportClient(Z_Construct_UClass_ULocalMPViewportClient, TEXT("ULocalMPViewportClient"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ULocalMPViewportClient);
	UClass* Z_Construct_UClass_AProjetAnnuelGameMode_NoRegister()
	{
		return AProjetAnnuelGameMode::StaticClass();
	}
	UClass* Z_Construct_UClass_AProjetAnnuelGameMode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameMode();
			Z_Construct_UPackage_ProjetAnnuel();
			OuterClass = AProjetAnnuelGameMode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2090028C;


				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Info Rendering MovementReplication Replication Actor Input Movement Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ProjetAnnuelGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("ProjetAnnuelGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AProjetAnnuelGameMode(Z_Construct_UClass_AProjetAnnuelGameMode, TEXT("AProjetAnnuelGameMode"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(AProjetAnnuelGameMode);
	UPackage* Z_Construct_UPackage_ProjetAnnuel()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/ProjetAnnuel")), false, false));
			ReturnPackage->PackageFlags |= PKG_CompiledIn | 0x00000000;
			FGuid Guid;
			Guid.A = 0xDD3C592E;
			Guid.B = 0x98120B20;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
